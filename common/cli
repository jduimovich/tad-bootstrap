
# use aliased links as the way to install and differ behavior
# ln -s PATH-TO-/tad-bootstrap/common/cli  path-to-your-bin/tab 
# ln -s PATH-TO-/tad-bootstrap/common/cli  path-to-your-bin/tad 
# this will run common command from ./common/cli and per-tool in the name of the link

echo "Command run as $0"
# This will be the common cli 
PHYSICAL_FILE=$(realpath $(readlink $0))
echo "PHYSICAL_FILE run as $PHYSICAL_FILE"
# common across all tools  
export COMMON_SCRIPTS=$(dirname $PHYSICAL_FILE)  
echo "COMMON_SCRIPTS run as $COMMON_SCRIPTS"

export ROOT=$(pwd)  
export CLI=$(basename $0) 
# tool specific in tad, tab or any other linked files 
export TOOL_SCRIPTS=$(realpath $COMMON_SCRIPTS/../$CLI)  
echo "TOOL_SCRIPTS run as $TOOL_SCRIPTS" 
CMD=$1
shift 

# Local config file contains the reference to one or more git repos
# TEMPLATE_REPO = git repo
# TEMPLATE_DIR  - local directory with git repo clone 
# DEST_REPO_ROOT - default destination into users repo for templates from the TEMPLATE_REPO

SKIP_REFRESH=false

LOCAL_CONFIG=$HOME/.$CLI 

echo "LOCAL_CONFIG is $LOCAL_CONFIG" 

if test -d $LOCAL_CONFIG; then 
    source $LOCAL_CONFIG/config
    if [ $SKIP_REFRESH == false ]; then
        LOCAL_TAG=$(cat $LOCAL_CONFIG/local-tag)
        CURRENT_TAG=$(git ls-remote  $TEMPLATE_REPO HEAD |  cut -f 1)   
        if [ "$CURRENT_TAG" != "$LOCAL_TAG" ]; then 
            (cd $TEMPLATE_DIR; git pull)
            echo $CURRENT_TAG > $LOCAL_CONFIG/local-tag    
        fi
    fi
    # default destination, can be overridden per template dir
    export COMPONENTS_PATH=$ROOT/$DEST_REPO_ROOT 
else 
    if [ "$CMD" == "set-repo" ]; then   
        REPO=$1 
        if [ -z "$REPO" ]; then
            echo "Missing Repository"
            exit 0
        fi   
        mkdir -p $LOCAL_CONFIG
        cd $LOCAL_CONFIG
        git clone $REPO templates 
        source $LOCAL_CONFIG/templates/.config 
        echo "export TEMPLATE_REPO=$REPO" > $LOCAL_CONFIG/config
        echo "export TEMPLATE_DIR=$(realpath $LOCAL_CONFIG/templates/$TEMPLATE_ROOT)" >> $LOCAL_CONFIG/config
        echo "export DEST_REPO_ROOT=$DEST_REPO_ROOT" >> $LOCAL_CONFIG/config
        echo "0000000" > $LOCAL_CONFIG/local-tag
        cat $LOCAL_CONFIG/config    
    else 
        echo "Need to configure the $CLI contents repository"
        echo "Use $CLI set-repo url "
    fi 
    exit
fi   

if [ -z "$CMD" ]; then
     echo "Usage: $CLI cmd"
     exit 0
fi

if test -f $COMMON_SCRIPTS/$CMD; then 
    $COMMON_SCRIPTS/$CMD $*
else 
    if test -f $TOOL_SCRIPTS/$CMD; then 
    $TOOL_SCRIPTS/$CMD $*
    else 
        echo $CMD is an invalid command for $CLI
    fi 
fi 

