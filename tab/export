SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" 
 
COMPONENT_TYPE="${1:-docker-build-shared}" 
EXPORT_DIR="${2:-export}" 
FORMAT="${3:-backstage}"  

if [ -z "$COMPONENT_TYPE" ]; then
     echo "Usage: $CMD component-name dir <format:backstage,pac,default>"
     exit 0
fi

if test -d $EXPORT_DIR; then  
    echo "$EXPORT_DIR already exists "
    exit 0
else 
    echo "Exporting to $ROOT/$EXPORT_DIR" 
fi
[ -x $SCRIPTDIR/configure ] && source $SCRIPTDIR/configure
if [  "$FORMAT" != "backstage" ]
then 
export REPOURL=$(git config --get remote.origin.url) 
export NAME=$(basename $REPOURL)    
export IMAGE="${2:-quay.io/jduimovich0/$NAME}"
export NAMESPACE=$(oc project --short)  
export APPNAME=$NAME 
export NAME=$NAME
export REPOURL=$REPOURL
export ARGOCOMPONENT=components/$NAME/overlays/development  
fi  

if test -d $TEMPLATE_DIR/$COMPONENT_TYPE; then
    echo "Exporting template $COMPONENT_TYPE in $FORMAT format"
    echo "From: $TEMPLATE_DIR/$COMPONENT_TYPE to: $ROOT/$EXPORT_DIR "
    mkdir -p $ROOT/$EXPORT_DIR
    cp -r $TEMPLATE_DIR/$COMPONENT_TYPE $ROOT/$EXPORT_DIR/      
    tree $ROOT/$EXPORT_DIR
    FILES=$(find $ROOT/$EXPORT_DIR -type f -print)
    COUNT=0
    for f in $FILES; do 
        let COUNT++
    done
    INDEX=0
    for f in $FILES; do
        let INDEX++
        expanded=$(mktemp)
        echo "$INDEX/$COUNT $f"
        node $SCRIPTDIR/../ta-engine/export.js $f $FORMAT >$expanded
        cp $expanded $f
    done
else 
    echo $COMPONENT_TYPE is an invalid template type in $TEMPLATE_DIR
fi  



 