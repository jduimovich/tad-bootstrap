SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" 
source $SCRIPTDIR/configure 

TEKTON=$ROOT/.tekton
if test -d $TEKTON; then 
    echo "Running Pipeline"
else
    echo 
    echo "$ROOT is not a .tekton enabled Gitops Repository"
    echo  
    exit 0
fi  
 

RUNNER=temp-run.yaml

cp $ROOT/.tekton/*-push.yaml $RUNNER
REVISION=$(git rev-parse HEAD) 
TAB_REPO=$(git config --get remote.origin.url)  
  
sed -i s!{{repo_url}}!$TAB_REPO!g $RUNNER 
sed -i s!{{revision}}!$REVISION!g $RUNNER
sed -i s!{{git_auth_secret}}!quay-secret!g $RUNNER 

echo "Deleting the git auth passed by PaC"

yq -i 'del(.spec.workspaces[] | select(.name == "git-auth"))' $RUNNER 

# The NS is set when adding the pipeline, grab from there 
APP_NS=$(yq .metadata.namespace $RUNNER)
kubectl get ns $APP_NS &> /dev/null
ERR=$? 
if [  "$ERR" != "0" ]
then     
    oc new-project $APP_NS
    oc label namespace  $APP_NS argocd.argoproj.io/managed-by=openshift-gitops
else  
    echo "$APP_NS exists"
fi
oc project $APP_NS   

SECRET_NAME=redhat-appstudio-staginguser-pull-secret
kubectl get secret $SECRET_NAME -n $APP_NS &> /dev/null
ERR=$? 
if [  "$ERR" == "0" ]
then
    echo "Secret docker-registry $SECRET_NAME already exists"
else
    echo "Install Secret for user $MY_QUAY_USER in Quay.io" 
    echo $MY_QUAY_USER
    echo $MY_QUAY_TOKEN
    kubectl create secret -n $APP_NS docker-registry $SECRET_NAME \
        --docker-server="https://quay.io" \
        --docker-username=$MY_QUAY_USER \
        --docker-password=$MY_QUAY_TOKEN  
fi
oc secrets link pipeline $SECRET_NAME  
oc delete -f $RUNNER &> /dev/null
oc apply -f $RUNNER 