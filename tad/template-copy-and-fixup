# installer type component namespace image

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" 
[ -x $SCRIPTDIR/configure ] && source $SCRIPTDIR/configure  
  
TYPE=$1
CNAME=$2 
IMAGE=$3 

if test -d $TEMPLATE_DIR/$TYPE; then 
    echo "Initializing $TYPE component $APP_NAME:$CNAME in $APP_NS from template"
    echo "Setting deploy image to $IMAGE" 
    echo "Templates from $TEMPLATE_DIR"
else 
    echo $TYPE is an invalid template type in $TEMPLATE_DIR
    exit 0
fi 

echo "Copy Template for $TYPE from  $TEMPLATE_DIR/$TYPE into $COMPONENTS_PATH"
mkdir -p $COMPONENTS_PATH
cp -r $TEMPLATE_DIR/$TYPE $COMPONENTS_PATH/$CNAME/   # cp from template to component name 
   
if [ "$REPO_FORMAT" == "single" ]; then 
export ARGOCOMPONENT=$SINGLE_APP_KUSTOMIZE_ROOT 
else
export ARGOCOMPONENT=components/$CNAME/overlays/development 
fi    

EXPAND=$(mktemp)  
cat $SCRIPTDIR/../ta-engine/expansions/default.js |
sed s!sed.edit.APPNAME!\"$APP_NAME\"!g |
sed s!sed.edit.ARGOCOMPONENT!\"$ARGOCOMPONENT\"!g |
sed s!sed.edit.IMAGE!\"$IMAGE\"!g |
sed s!sed.edit.NAMESPACE!\"$APP_NS\"!g |
sed s!sed.edit.NAME!\"$CNAME\"!g |
sed s!sed.edit.REPOURL!\"$REPO_NAME.git\"!g |
sed s!sed.edit.DOCKERFILE!\"UNUSED_DOCKEERFILE\"!g  |
sed s!sed.edit.BUILDCONTEXT!\"UNUSED_BUILDCONTEXT\"!g |
grep -v "sed" > $EXPAND 
 
EXPAND_DIR=$SCRIPTDIR/../ta-engine/util-template-expand-directory
EXPAND_FILE=$SCRIPTDIR/../ta-engine/util-template-expand-file
bash $EXPAND_DIR $COMPONENTS_PATH/$CNAME $EXPAND

echo "Creating Application in <$REPO_FORMAT> ArgoCD App format"
if [ "$REPO_FORMAT" == "single" ]; then  
    ARGOAPP=$APPS_ROOT/$APP_NAME.yaml 
    if test -f $ARGOAPP; then
        echo "ArgoCD Root Exists"  
    else 
        cp  $TEMPLATE_DIR/application.yaml  $ARGOAPP
        bash $EXPAND_FILE $ARGOAPP $EXPAND
    fi
    bash $SCRIPTDIR/util-regenerate-kustomize
else 
    ARGOAPP=$APPS_ROOT/$CNAME.yaml 
    cp  $TEMPLATE_DIR/application.yaml  $ARGOAPP
    bash $EXPAND_FILE $ARGOAPP $EXPAND
fi 
