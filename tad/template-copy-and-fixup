# installer type component namespace image

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" 
[ -x $SCRIPTDIR/configure ] && source $SCRIPTDIR/configure  
 
ARGOREPONAME=$REPO_NAME.git  
TYPE=$1
CNAME=$2 
export IMAGE=$3 

if test -d $TEMPLATE_DIR/$TYPE; then 
    echo "Initializing $TYPE component $APP_NAME:$CNAME in $APP_NS from template"
    echo "Setting deploy image to $IMAGE" 
    echo "Templates from $TEMPLATE_DIR"
else 
    echo $TYPE is an invalid template type in $TEMPLATE_DIR
    exit 0
fi 

echo "Copy Template for $TYPE from  $TEMPLATE_DIR/$TYPE into $COMPONENTS_PATH"
mkdir -p $COMPONENTS_PATH
cp -r $TEMPLATE_DIR/$TYPE $COMPONENTS_PATH/$CNAME/   # cp from template to component name 

# image exported above
# ta-engine takes params as env for now
# move to replacement "json" file and pass as param. 
export REPOURL=$REPO_NAME
export NAME=$CNAME   
export NAMESPACE=$APP_NS
export APPNAME=$APP_NAME  
if [ "$REPO_FORMAT" == "single" ]; then 
export ARGOCOMPONENT=$SINGLE_APP_KUSTOMIZE_ROOT 
else
export ARGOCOMPONENT=components/$NAME/overlays/development 
fi  

EXPAND_DIR=$SCRIPTDIR/../ta-engine/util-template-expand-directory
EXPAND_FILE=$SCRIPTDIR/../ta-engine/util-template-expand-file
bash $EXPAND_DIR $COMPONENTS_PATH/$CNAME default

echo "Creating Application in <$REPO_FORMAT> ArgoCD App format"
if [ "$REPO_FORMAT" == "single" ]; then  
    ARGOAPP=$APPS_ROOT/$APP_NAME.yaml 
    if test -f $ARGOAPP; then
        echo "ArgoCD Root Exists"  
    else 
        cp  $TEMPLATE_DIR/application.yaml  $ARGOAPP
        bash $EXPAND_FILE $ARGOAPP default
    fi
    bash $SCRIPTDIR/util-regenerate-kustomize
else 
    ARGOAPP=$APPS_ROOT/$CNAME.yaml 
    cp  $TEMPLATE_DIR/application.yaml  $ARGOAPP
    bash $EXPAND_FILE $ARGOAPP default
fi 
