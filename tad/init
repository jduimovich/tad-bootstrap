SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" 

# If repo is not connected to git, then need to setup a remote
REPO_NAME=$(git config --get remote.origin.url)   
if [ "$REPO_NAME" == "" ]; then 
    echo "This repo is has no remote."
    echo "Create on github and connect remote here."
    BASE_REPO=$(basename $ROOT)
    
    echo "Run this to create $BASE_REPO in github" 
    echo 
    echo "gh repo create $BASE_REPO --public" 
    echo "Gitops Repo Bootstrapped" > README.md
    echo "git add README.md"
    echo "git commit -m \"Gitops Repo Bootstrapped\"" 
    echo "git branch -M main"
    echo "git remote add origin https://github.com/$MY_GITHUB_USER/$BASE_REPO"
    echo "git push -u origin main"  
    echo 
    exit 0
fi  

GITOPS_MARKER_FILE=$ROOT/$DEST_REPO_ROOT/application.yaml
if test -f $GITOPS_MARKER_FILE; then 
    echo  
    echo "Gitops marker is $GITOPS_MARKER_FILE"
    echo "$ROOT is already a Gitops Repository"
    echo  
    exit 0 
fi 
 
# Application Layout comes from $DEST_REPO_ROOT (default ./)
# It can be any root
# / root for application, kustomize and components 
# /app-of-apps - argocd apps per env kustomize definition  
# /components - individual components content

# markers ... 
# /application.yaml - argocd app definition   

# local relative to root directory
ARGOCD_ROOT=$DEST_REPO_ROOT 
COMPONENTS_ROOT=$ARGOCD_ROOT/components 
APPLICATION_ROOT=$ARGOCD_ROOT/app-of-apps  

APP_NAME=$(basename $REPO_NAME .git)  
APP_NS=$APP_NAME
  
GITOPS_MARKER_FILE=$(realpath $DEST_REPO_ROOT/application.yaml)

echo "-----"
echo " ROOT/ARGOCD_ROOT $ROOT/$ARGOCD_ROOT"
echo " GITOPS_MARKER_FILE $GITOPS_MARKER_FILE" 

if test -f $GITOPS_MARKER_FILE; then  
    echo  
    echo "Gitops marker is $GITOPS_MARKER_FILE"
    echo "$ROOT is already a Gitops Repository"
    echo  
    exit 0  
else
read -r -d '' DATA <<DATA
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: $APP_NAME
  namespace: $APP_NS
  finalizers: ["resources-finalizer.argocd.argoproj.io"] 
spec:
  project: default
  source:
    path: ./app-of-apps
    repoURL: $REPO_NAME
    targetRevision: main
  destination:
    namespace: $APP_NS
    server: https://kubernetes.default.svc
  syncPolicy:
    managedNamespaceMetadata:
      labels: 
        argocd.argoproj.io/managed-by: rhtap
    automated: 
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PruneLast=true
DATA
    echo "$DATA" > $GITOPS_MARKER_FILE
    echo "Initialized Gitops Repo: $REPO_NAME"
fi  
